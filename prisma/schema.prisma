// ============================================
// Prisma Schema for SRT Timetable
// Database: Microsoft SQL Server
// Complete Schema: 22 Tables
// ============================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// ============================================
// SECTION 1: CORE TABLES
// ============================================

model Station {
  id                    Int       @id @default(autoincrement())
  stationCode          Int       @unique @map("station_code")
  
  codeTh               String    @map("code_th") @db.NVarChar(10)
  codeEn               String    @map("code_en") @db.NVarChar(10)
  codeCn               String?   @map("code_cn") @db.NVarChar(10)
  
  nameTh               String    @map("name_th") @db.NVarChar(255)
  nameEn               String    @map("name_en") @db.NVarChar(255)
  nameCn               String?   @map("name_cn") @db.NVarChar(255)
  
  displayNameTh        String?   @map("display_name_th") @db.NVarChar(255)
  displayNameEn        String?   @map("display_name_en") @db.NVarChar(255)
  displayNameCn        String?   @map("display_name_cn") @db.NVarChar(255)
  
  distanceForPricing   Decimal   @default(0) @map("distance_for_pricing") @db.Decimal(10, 4)
  distanceActual       Decimal   @default(0) @map("distance_actual") @db.Decimal(10, 4)
  
  stationClass         String?   @map("station_class") @db.NVarChar(20)
  
  latitude             Decimal?  @db.Decimal(10, 8)
  longitude            Decimal?  @db.Decimal(11, 8)
  address              String?   @db.NVarChar(Max)
  phone                String?   @db.NVarChar(20)
  
  facilities           String?   @db.NVarChar(Max)
  
  imageUrl             String?   @map("image_url") @db.NVarChar(500)
  images               String?   @db.NVarChar(Max)
  
  isActive             Boolean   @default(true) @map("is_active")
  notes                String?   @db.NVarChar(Max)
  
  createdAt            DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt            DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  createdBy            String?   @map("created_by") @db.UniqueIdentifier
  updatedBy            String?   @map("updated_by") @db.UniqueIdentifier
  
  trainsOrigin         Train[]   @relation("OriginStation")
  trainsDestination    Train[]   @relation("DestinationStation")
  trainStops           TrainStop[]
  routeDistancesFrom   RouteDistance[] @relation("FromStation")
  routeDistancesTo     RouteDistance[] @relation("ToStation")
  
  @@map("stations")
  @@index([codeTh])
  @@index([codeEn])
  @@index([stationCode])
  @@index([stationClass])
  @@index([isActive])
}

model TrainType {
  id           Int       @id @default(autoincrement())
  code         String    @unique @db.NVarChar(50)
  
  nameTh       String    @map("name_th") @db.NVarChar(100)
  nameEn       String?   @map("name_en") @db.NVarChar(100)
  nameCn       String?   @map("name_cn") @db.NVarChar(100)
  
  baseFare     Decimal   @default(0) @map("base_fare") @db.Decimal(10, 2)
  
  sortOrder    Int       @default(0) @map("sort_order")
  color        String?   @db.NVarChar(7)
  
  isActive     Boolean   @default(true) @map("is_active")
  
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  trains       Train[]
  trainFares   TrainFare[]
  
  @@map("train_types")
  @@index([code])
  @@index([sortOrder])
}

model Train {
  id                    Int       @id @default(autoincrement())
  trainNumber          String    @unique @map("train_number") @db.NVarChar(20)
  
  trainNameTh          String?   @map("train_name_th") @db.NVarChar(255)
  trainNameEn          String?   @map("train_name_en") @db.NVarChar(255)
  trainNameCn          String?   @map("train_name_cn") @db.NVarChar(255)
  
  trainTypeId          Int?      @map("train_type_id")
  trainType            TrainType? @relation(fields: [trainTypeId], references: [id])
  
  originStationId      Int?      @map("origin_station_id")
  originStation        Station?  @relation("OriginStation", fields: [originStationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  destinationStationId Int?      @map("destination_station_id")
  destinationStation   Station?  @relation("DestinationStation", fields: [destinationStationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  departureTime        DateTime  @map("departure_time") @db.Time
  arrivalTime          DateTime  @map("arrival_time") @db.Time
  
  durationMinutes      Int?      @map("duration_minutes")
  operatingDays        String    @default("daily") @map("operating_days") @db.NVarChar(200)
  
  runningOrder         Int?      @map("running_order")
  serviceZone          String?   @map("service_zone") @db.NVarChar(100)
  totalDistanceKm      Decimal?  @map("total_distance_km") @db.Decimal(10, 2)
  
  isActive             Boolean   @default(true) @map("is_active")
  notes                String?   @db.NVarChar(Max)
  
  createdAt            DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt            DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  createdBy            String?   @map("created_by") @db.UniqueIdentifier
  updatedBy            String?   @map("updated_by") @db.UniqueIdentifier
  
  trainStops           TrainStop[]
  trainCompositions    TrainComposition[]
  routeDistances       RouteDistance[]
  announcements        Announcement[]
  
  @@map("trains")
  @@index([trainNumber])
  @@index([trainTypeId])
  @@index([originStationId])
  @@index([destinationStationId])
  @@index([isActive])
}

model TrainStop {
  id                Int       @id @default(autoincrement())
  trainId           Int       @map("train_id")
  train             Train     @relation(fields: [trainId], references: [id], onDelete: Cascade)
  
  stationId         Int       @map("station_id")
  station           Station   @relation(fields: [stationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  stopOrder         Int       @map("stop_order")
  
  arrivalTime       DateTime? @map("arrival_time") @db.Time
  departureTime     DateTime? @map("departure_time") @db.Time
  waitTimeMinutes   Int?      @map("wait_time_minutes")
  
  platformNumber    String?   @map("platform_number") @db.NVarChar(20)
  
  distanceFromOrigin Decimal? @map("distance_from_origin") @db.Decimal(10, 2)
  
  isActive          Boolean   @default(true) @map("is_active")
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("train_stops")
  @@unique([trainId, stationId])
  @@index([trainId])
  @@index([stationId])
  @@index([stopOrder])
}

model RouteDistance {
  id                Int       @id @default(autoincrement())
  trainId           Int?      @map("train_id")
  train             Train?    @relation(fields: [trainId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  fromStationId     Int       @map("from_station_id")
  fromStation       Station   @relation("FromStation", fields: [fromStationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  toStationId       Int       @map("to_station_id")
  toStation         Station   @relation("ToStation", fields: [toStationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  distanceKm        Decimal   @map("distance_km") @db.Decimal(10, 2)
  distanceForPricing Decimal  @map("distance_for_pricing") @db.Decimal(10, 2)
  
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("route_distances")
  @@unique([trainId, fromStationId, toStationId])
  @@index([trainId])
  @@index([fromStationId])
  @@index([toStationId])
}

model Bogie {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  nameCn            String?   @map("name_cn") @db.NVarChar(100)
  
  shortNameTh       String?   @map("short_name_th") @db.NVarChar(50)
  shortNameEn       String?   @map("short_name_en") @db.NVarChar(50)
  
  classNumber       Int       @map("class_number")
  bogieClass        String    @map("bogie_class") @db.NVarChar(50)
  
  hasAC             Boolean   @default(false) @map("has_ac")
  isSleeper         Boolean   @default(false) @map("is_sleeper")
  
  totalSeats        Int?      @map("total_seats")
  upperBerths       Int?      @map("upper_berths")
  lowerBerths       Int?      @map("lower_berths")
  
  sortOrder         Int       @default(0) @map("sort_order")
  
  isActive          Boolean   @default(true) @map("is_active")
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  trainCompositions TrainComposition[]
  bogieACFares      BogieACFare[]
  bogieAmenities    BogieAmenity[]
  berthFares        BerthFare[]
  
  @@map("bogies")
  @@index([code])
  @@index([classNumber])
  @@index([sortOrder])
}

model TrainComposition {
  id                Int       @id @default(autoincrement())
  trainId           Int       @map("train_id")
  train             Train     @relation(fields: [trainId], references: [id], onDelete: Cascade)
  
  bogieId           Int       @map("bogie_id")
  bogie             Bogie     @relation(fields: [bogieId], references: [id])
  
  quantity          Int       @default(1)
  
  sortOrder         Int?      @map("sort_order")
  
  isActive          Boolean   @default(true) @map("is_active")
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("train_compositions")
  @@unique([trainId, bogieId])
  @@index([trainId])
  @@index([bogieId])
}

// ============================================
// SECTION 2: PRICING TABLES
// ============================================

model TrainFare {
  id                Int       @id @default(autoincrement())
  trainTypeId       Int       @map("train_type_id")
  trainType         TrainType @relation(fields: [trainTypeId], references: [id])
  
  classNumber       Int       @map("class_number")
  
  fareTh            String    @map("fare_th") @db.NVarChar(100)
  fareEn            String?   @map("fare_en") @db.NVarChar(100)
  
  fareValue         Decimal   @map("fare_value") @db.Decimal(10, 2)
  
  isActive          Boolean   @default(true) @map("is_active")
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("train_fares")
  @@unique([trainTypeId, classNumber])
  @@index([trainTypeId])
  @@index([classNumber])
}

model DistanceFare {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  
  classNumber       Int       @map("class_number")
  
  sortOrder         Int       @default(0) @map("sort_order")
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  distanceFareRanges DistanceFareRange[]
  
  @@map("distance_fares")
  @@index([code])
  @@index([classNumber])
}

model DistanceFareRange {
  id                Int       @id @default(autoincrement())
  distanceFareId    Int       @map("distance_fare_id")
  distanceFare      DistanceFare @relation(fields: [distanceFareId], references: [id], onDelete: Cascade)
  
  minKm             Decimal   @map("min_km") @db.Decimal(10, 2)
  maxKm             Decimal?  @map("max_km") @db.Decimal(10, 2)
  
  farePerKm         Decimal?  @map("fare_per_km") @db.Decimal(10, 4)
  flatRate          Decimal?  @map("flat_rate") @db.Decimal(10, 2)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("distance_fare_ranges")
  @@index([distanceFareId])
  @@index([minKm])
}

model FareFormula {
  id                Int       @id @default(autoincrement())
  formulaName       String    @map("formula_name") @db.NVarChar(100)
  
  description       String?   @db.NVarChar(Max)
  
  formula           String    @db.NVarChar(Max)
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("fare_formulas")
}

model ACFareCategory {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  
  sortOrder         Int       @default(0) @map("sort_order")
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  acFares           ACFare[]
  
  @@map("ac_fare_categories")
  @@index([code])
}

model ACFare {
  id                Int       @id @default(autoincrement())
  acFareCategoryId  Int       @map("ac_fare_category_id")
  acFareCategory    ACFareCategory @relation(fields: [acFareCategoryId], references: [id])
  
  minKm             Decimal   @map("min_km") @db.Decimal(10, 2)
  maxKm             Decimal?  @map("max_km") @db.Decimal(10, 2)
  
  fareAmount        Decimal   @map("fare_amount") @db.Decimal(10, 2)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("ac_fares")
  @@index([acFareCategoryId])
  @@index([minKm])
}

model BogieACFare {
  id                Int       @id @default(autoincrement())
  bogieId           Int       @map("bogie_id")
  bogie             Bogie     @relation(fields: [bogieId], references: [id])
  
  minKm             Decimal   @map("min_km") @db.Decimal(10, 2)
  maxKm             Decimal?  @map("max_km") @db.Decimal(10, 2)
  
  acFare            Decimal   @map("ac_fare") @db.Decimal(10, 2)
  
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("bogie_ac_fares")
  @@index([bogieId])
  @@index([minKm])
}

model BerthFare {
  id                Int       @id @default(autoincrement())
  bogieId           Int       @map("bogie_id")
  bogie             Bogie     @relation(fields: [bogieId], references: [id])
  
  berthType         String    @map("berth_type") @db.NVarChar(50)
  
  minKm             Decimal   @map("min_km") @db.Decimal(10, 2)
  maxKm             Decimal?  @map("max_km") @db.Decimal(10, 2)
  
  fareAmount        Decimal   @map("fare_amount") @db.Decimal(10, 2)
  
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("berth_fares")
  @@index([bogieId])
  @@index([berthType])
  @@index([minKm])
}

model PriceAdjustment {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  
  adjustmentType    String    @map("adjustment_type") @db.NVarChar(50)
  
  value             Decimal   @db.Decimal(10, 2)
  
  startDate         DateTime? @map("start_date") @db.Date
  endDate           DateTime? @map("end_date") @db.Date
  
  applicableTrains  String?   @map("applicable_trains") @db.NVarChar(Max)
  applicableBogies  String?   @map("applicable_bogies") @db.NVarChar(Max)
  
  isActive          Boolean   @default(true) @map("is_active")
  notes             String?   @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  @@map("price_adjustments")
  @@index([code])
  @@index([adjustmentType])
  @@index([isActive])
}

// ============================================
// SECTION 3: AMENITIES & FEATURES
// ============================================

model Amenity {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  nameCn            String?   @map("name_cn") @db.NVarChar(100)
  
  icon              String?   @db.NVarChar(50)
  
  sortOrder         Int       @default(0) @map("sort_order")
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  bogieAmenities    BogieAmenity[]
  
  @@map("amenities")
  @@index([code])
}

model BogieAmenity {
  id                Int       @id @default(autoincrement())
  bogieId           Int       @map("bogie_id")
  bogie             Bogie     @relation(fields: [bogieId], references: [id], onDelete: Cascade)
  
  amenityId         Int       @map("amenity_id")
  amenity           Amenity   @relation(fields: [amenityId], references: [id])
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  
  @@map("bogie_amenities")
  @@unique([bogieId, amenityId])
  @@index([bogieId])
  @@index([amenityId])
}

model Announcement {
  id                Int       @id @default(autoincrement())
  
  titleTh           String    @map("title_th") @db.NVarChar(255)
  titleEn           String?   @map("title_en") @db.NVarChar(255)
  titleCn           String?   @map("title_cn") @db.NVarChar(255)
  
  contentTh         String    @map("content_th") @db.NVarChar(Max)
  contentEn         String?   @map("content_en") @db.NVarChar(Max)
  contentCn         String?   @map("content_cn") @db.NVarChar(Max)
  
  announcementType  String    @map("announcement_type") @db.NVarChar(50)
  priority          String    @default("normal") @db.NVarChar(20)
  
  startDate         DateTime? @map("start_date") @db.DateTime2
  endDate           DateTime? @map("end_date") @db.DateTime2
  
  trainId           Int?      @map("train_id")
  train             Train?    @relation(fields: [trainId], references: [id])
  
  affectedRoutes    String?   @map("affected_routes") @db.NVarChar(Max)
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  createdBy         String?   @map("created_by") @db.UniqueIdentifier
  
  @@map("announcements")
  @@index([announcementType])
  @@index([priority])
  @@index([isActive])
  @@index([trainId])
}

// ============================================
// SECTION 4: ADMIN & SECURITY
// ============================================

model AdminUser {
  id                String    @id @default(uuid()) @db.UniqueIdentifier
  username          String    @unique @db.NVarChar(100)
  email             String    @unique @db.NVarChar(255)
  passwordHash      String    @map("password_hash") @db.NVarChar(255)
  
  fullName          String    @map("full_name") @db.NVarChar(255)
  phone             String?   @db.NVarChar(20)
  
  roleId            Int       @map("role_id")
  role              AdminRole @relation(fields: [roleId], references: [id])
  
  lastLoginAt       DateTime? @map("last_login_at") @db.DateTime2
  lastLoginIp       String?   @map("last_login_ip") @db.NVarChar(45)
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  adminLogs         AdminLog[]
  
  @@map("admin_users")
  @@index([username])
  @@index([email])
  @@index([roleId])
}

model AdminRole {
  id                Int       @id @default(autoincrement())
  code              String    @unique @db.NVarChar(50)
  
  nameTh            String    @map("name_th") @db.NVarChar(100)
  nameEn            String?   @map("name_en") @db.NVarChar(100)
  
  permissions       String    @db.NVarChar(Max)
  
  isActive          Boolean   @default(true) @map("is_active")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime2
  
  adminUsers        AdminUser[]
  
  @@map("admin_roles")
  @@index([code])
}

model AdminLog {
  id                Int       @id @default(autoincrement())
  
  adminUserId       String    @map("admin_user_id") @db.UniqueIdentifier
  adminUser         AdminUser @relation(fields: [adminUserId], references: [id])
  
  action            String    @db.NVarChar(100)
  entityType        String?   @map("entity_type") @db.NVarChar(100)
  entityId          Int?      @map("entity_id")
  
  changes           String?   @db.NVarChar(Max)
  
  ipAddress         String?   @map("ip_address") @db.NVarChar(45)
  userAgent         String?   @map("user_agent") @db.NVarChar(Max)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime2
  
  @@map("admin_logs")
  @@index([adminUserId])
  @@index([action])
  @@index([entityType])
  @@index([createdAt])
}
